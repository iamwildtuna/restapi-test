# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  app.name: '%env(APP_NAME)%'
  jwt:
    ttl: '%env(int:JWT_TTL)%'
    private: '%env(string:JWT_PRIV_KEY)%'
    public: '%env(string:JWT_PUB_KEY)%'
    check: '%env(bool:APP_CHECK_TOKEN)%'
    redis: '%env(string:REDIS_URL)%'

  tracing.host: '%env(TRACING_HOST)%'
  tracing.port: '%env(TRACING_PORT)%'

  redis.url: '%env(REDIS_URL)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Traits/'
      - '../src/Kernel.php'
      - '../src/Tests/'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: [ 'controller.service_arguments' ]

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  gelf_app_formatter:
    class: Monolog\Formatter\GelfMessageFormatter
    arguments:
      - '%env(APP_NAME)%'

  App\Service\ElasticService:
    arguments:
      - ['%env(ELASTIC_HOST)%']
      - '%env(ELASTIC_LOGIN)%'
      - '%env(ELASTIC_PASSWORD)%'

  App\Security\Jwt\Token:
    autowire: true
    arguments:
      - '%jwt%'

  Symfony\Component\HttpFoundation\Request:
    autowire: true