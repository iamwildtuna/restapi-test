security:
  encoders:
    Symfony\Component\Security\Core\User\User: plaintext

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      id: App\Security\UserProvider

    in_memory:
      memory:
        users:
          '%env(string:API_USER)%': { password: '%env(string:API_PASSWORD)%', roles: ROLE_HTTP_USER }

  firewalls:
    basic:
      pattern: ^/test/http
      anonymous: false
      http_basic:
        realm: 'Secured API area'
        provider: in_memory

    main:
      stateless: true
      provider: app_user_provider
      anonymous: true
      logout: ~

      guard:
        authenticators:
          - App\Security\TokenAuthenticator

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/test/http, roles: ROLE_HTTP_USER }
    - { path: ^/elastic/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/test/ping, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/test/redis, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/test/amqp, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/test/jwt/create, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/, roles: ROLE_USER }